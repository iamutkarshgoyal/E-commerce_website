{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgoyal/new_website/my_project/src/MyComponents/Product Card.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCard = ({\n  product_name,\n  price,\n  category,\n  subcategory,\n  product_images = []\n}) => {\n  let images = [];\n\n  // 🧩 Handle different formats of product_images\n  if (typeof product_images === \"string\") {\n    try {\n      const jsonFixed = product_images.replace(/'/g, '\"');\n      const parsed = JSON.parse(jsonFixed);\n      images = parsed.map(obj => Object.keys(obj)[0]);\n    } catch {\n      images = product_images.match(/[\\w-]+\\.(jpg|png|jpeg|webp)/g) || [];\n    }\n  } else if (Array.isArray(product_images)) {\n    images = product_images;\n  }\n\n  // 🏗️ Build local image path — e.g. public/zara_images/Men/Subcategory/img.jpg\n  const basePath = `${process.env.PUBLIC_URL}/zara_images/${category}/${subcategory}`;\n  const imageSrc = images.length > 0 ? `${basePath}/${images[0]}` : `${process.env.PUBLIC_URL}/zara_images/no-image.jpg`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-card-item\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"product-link\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-image-gallery\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageSrc,\n          alt: product_name,\n          className: \"product-image\",\n          loading: \"lazy\",\n          onError: e => {\n            e.target.src = `${process.env.PUBLIC_URL}/zara_images/no-image.jpg`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"product-name\",\n          children: product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subcategory\",\n          children: subcategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [\"\\u20B9\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductCard;\nexport default ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProductCard","product_name","price","category","subcategory","product_images","images","jsonFixed","replace","parsed","JSON","parse","map","obj","Object","keys","match","Array","isArray","basePath","process","env","PUBLIC_URL","imageSrc","length","className","children","href","src","alt","loading","onError","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utkarshgoyal/new_website/my_project/src/MyComponents/Product Card.jsx"],"sourcesContent":["import React from \"react\";\n\nconst ProductCard = ({\n  product_name,\n  price,\n  category,\n  subcategory,\n  product_images = [],\n}) => {\n  let images = [];\n\n  // 🧩 Handle different formats of product_images\n  if (typeof product_images === \"string\") {\n    try {\n      const jsonFixed = product_images.replace(/'/g, '\"');\n      const parsed = JSON.parse(jsonFixed);\n      images = parsed.map((obj) => Object.keys(obj)[0]);\n    } catch {\n      images = product_images.match(/[\\w-]+\\.(jpg|png|jpeg|webp)/g) || [];\n    }\n  } else if (Array.isArray(product_images)) {\n    images = product_images;\n  }\n\n  // 🏗️ Build local image path — e.g. public/zara_images/Men/Subcategory/img.jpg\n  const basePath = `${process.env.PUBLIC_URL}/zara_images/${category}/${subcategory}`;\n  const imageSrc =\n    images.length > 0 ? `${basePath}/${images[0]}` : `${process.env.PUBLIC_URL}/zara_images/no-image.jpg`;\n\n  return (\n    <div className=\"product-card-item\">\n      <a href=\"#\" className=\"product-link\">\n        <div className=\"product-image-gallery\">\n          <img\n            src={imageSrc}\n            alt={product_name}\n            className=\"product-image\"\n            loading=\"lazy\"\n            onError={(e) => {\n              e.target.src = `${process.env.PUBLIC_URL}/zara_images/no-image.jpg`;\n            }}\n          />\n        </div>\n\n        <div className=\"product-info\">\n          <h3 className=\"product-name\">{product_name}</h3>\n          <p className=\"subcategory\">{subcategory}</p>\n          <p className=\"price\">₹{price}</p>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default ProductCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}