{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshgoyal/new_website/my_project/src/MyComponents/Product Card.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCard = ({\n  product_name,\n  price,\n  category,\n  subcategory,\n  product_images\n}) => {\n  // Handle both \" product_images\" (with space) and \"product_images\"\n  const rawImages = product_images || \"\";\n  let images = [];\n  try {\n    // Fix bad JSON format (replace single quotes with double)\n    images = JSON.parse(rawImages.replace(/'/g, '\"'));\n  } catch (error) {\n    console.error(\"Error parsing images for:\", product_name, error);\n  }\n\n  // Extract only the URLs from parsed objects\n  const imageUrls = images.map(imgObj => Object.keys(imgObj)[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-card-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-image-gallery\",\n      children: imageUrls.length > 0 ? imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: `${product_name} ${index + 1}`,\n        className: \"product-image\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: product_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subcategory\",\n      children: subcategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"price\",\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"category\",\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .product-card-item {\n          flex: 1 1 calc(25% - 20px);\n          background: #fff;\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n          padding: 15px;\n          text-align: center;\n          margin: 10px;\n          transition: transform 0.2s ease;\n        }\n\n        .product-card-item:hover {\n          transform: translateY(-5px);\n        }\n\n        .product-image-gallery {\n          display: flex;\n          overflow-x: auto;\n          gap: 10px;\n          scroll-behavior: smooth;\n          margin-bottom: 10px;\n        }\n\n        .product-image {\n          width: 180px;\n          height: 200px;\n          object-fit: cover;\n          border-radius: 10px;\n          flex-shrink: 0;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductCard;\nexport default ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProductCard","product_name","price","category","subcategory","product_images","rawImages","images","JSON","parse","replace","error","console","imageUrls","map","imgObj","Object","keys","className","children","length","url","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utkarshgoyal/new_website/my_project/src/MyComponents/Product Card.jsx"],"sourcesContent":["import React from \"react\";\n\nconst ProductCard = ({ product_name, price, category, subcategory, product_images }) => {\n  // Handle both \" product_images\" (with space) and \"product_images\"\n  const rawImages = product_images || \"\";\n\n  let images = [];\n  try {\n    // Fix bad JSON format (replace single quotes with double)\n    images = JSON.parse(rawImages.replace(/'/g, '\"'));\n  } catch (error) {\n    console.error(\"Error parsing images for:\", product_name, error);\n  }\n\n  // Extract only the URLs from parsed objects\n  const imageUrls = images.map((imgObj) => Object.keys(imgObj)[0]);\n\n  return (\n    <div className=\"product-card-item\">\n      <div className=\"product-image-gallery\">\n        {imageUrls.length > 0 ? (\n          imageUrls.map((url, index) => (\n            <img\n              key={index}\n              src={url}\n              alt={`${product_name} ${index + 1}`}\n              className=\"product-image\"\n            />\n          ))\n        ) : (\n          <p>No images available</p>\n        )}\n      </div>\n\n      <h3>{product_name}</h3>\n      <p className=\"subcategory\">{subcategory}</p>\n      <p className=\"price\">{price}</p>\n      <p className=\"category\">{category}</p>\n\n      <style>{`\n        .product-card-item {\n          flex: 1 1 calc(25% - 20px);\n          background: #fff;\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n          padding: 15px;\n          text-align: center;\n          margin: 10px;\n          transition: transform 0.2s ease;\n        }\n\n        .product-card-item:hover {\n          transform: translateY(-5px);\n        }\n\n        .product-image-gallery {\n          display: flex;\n          overflow-x: auto;\n          gap: 10px;\n          scroll-behavior: smooth;\n          margin-bottom: 10px;\n        }\n\n        .product-image {\n          width: 180px;\n          height: 200px;\n          object-fit: cover;\n          border-radius: 10px;\n          flex-shrink: 0;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ProductCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,YAAY;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAe,CAAC,KAAK;EACtF;EACA,MAAMC,SAAS,GAAGD,cAAc,IAAI,EAAE;EAEtC,IAAIE,MAAM,GAAG,EAAE;EACf,IAAI;IACF;IACAA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACH,SAAS,CAACI,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEV,YAAY,EAAEU,KAAK,CAAC;EACjE;;EAEA;EACA,MAAME,SAAS,GAAGN,MAAM,CAACO,GAAG,CAAEC,MAAM,IAAKC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAEhE,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCpB,OAAA;MAAKmB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCN,SAAS,CAACO,MAAM,GAAG,CAAC,GACnBP,SAAS,CAACC,GAAG,CAAC,CAACO,GAAG,EAAEC,KAAK,kBACvBvB,OAAA;QAEEwB,GAAG,EAAEF,GAAI;QACTG,GAAG,EAAE,GAAGvB,YAAY,IAAIqB,KAAK,GAAG,CAAC,EAAG;QACpCJ,SAAS,EAAC;MAAe,GAHpBI,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF,CAAC,gBAEF7B,OAAA;QAAAoB,QAAA,EAAG;MAAmB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN7B,OAAA;MAAAoB,QAAA,EAAKlB;IAAY;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvB7B,OAAA;MAAGmB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEf;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C7B,OAAA;MAAGmB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEjB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC7B,OAAA;MAAGmB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAEhB;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtC7B,OAAA;MAAAoB,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACC,EAAA,GAvEI7B,WAAW;AAyEjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}